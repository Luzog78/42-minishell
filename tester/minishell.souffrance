# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    minishell.souffrance                               :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: ysabik <ysabik@student.42.fr>              +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/02/07 16:39:32 by ysabik            #+#    #+#              #
#    Updated: 2024/02/15 17:38:40 by ysabik           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #


=== Custom Tests ===

$ echo abc

@ abc

---

$ echo "Hello, World!" You"are"'my'"friend"

@ Hello, World! Youaremyfriend

---

$ export a=42 b=24 c
$ echo $? $a $b | cat -e

@ 0 42 24$

---

$ unset
$ unset a b c
$ echo -n "$a$b" | cat | cat|cat |wc -l|cat|cat
$ ps -a | grep -E "(cat)" | wc -l

@ 0
@ 0

---

$ export =sdgsdfgsdfg c=1
$ expr $? + $c | sed -r "s/([0-9]*)/>> \1 <</"

###
@ >> 2 <<

---

$ unset a b c d
$ echo $a $b $c $?

@ 0

---

$ unset a
$ export a+=Hello
$ echo $a $?
$ export a+=,''' '"World !"
$ echo $a $?

@ Hello 0
@ Hello, World ! 0

---

$ unset a
$ export a=echo
$ $a $a $?
$ $a $a $?

@ echo 0
@ echo 0

---

$ mkdir -p io
$ << 1 > io/infile << 2 cat << 3
$ abc
$ 1
$ def
$ 2
$ ghi
$ 3
$ export a=io/infile
$ cat -e $a $a
$ rm -rf io

@ ghi$
@ ghi$

---

$ cat lajfhlskjluniunauhrihlvkfd
$ echo $?

###
@ 1

---

$ lajfhlskjluniunauhrihlvkfd
$ echo $?

###
@ 127

---

$ mkdir -p io
$ > io/outfile1 pwd
$ echo $?
$ cd io
$ > outfile2 pwd
$ diff outfile1 outfile2 | grep -E "^[<>] " | sed -r "s/(^[<>] )//; s/(\/io$)//" | head -n 1 > outfile3
$ diff outfile1 outfile2 | grep -E "^[<>] " | sed -r "s/(^[<>] )//; s/(\/io$)//" | tail -n 1 > outfile4
$ diff outfile3 outfile4 | wc -l
$ echo $?
$ cd .. abc
$ echo $?
$ ls | wc -l
$ echo $?
$ cd ..
$ echo $?
$ rm -rf io

###
@ 0
@ 0
@ 0
@ 1
@ 4
@ 0
@ 0

---

$ mkdir -p io
$ cd io
$ echo $?
$ cat | ls
$ hey
$ %EOF
$ echo $?
$ cd ..
$ rm -rf io
$ echo $?

@ 0

---

$ touch io
$ cd io
$ echo $?
$ ./io
$ echo $?
$ rm -f io

###
@ 1
@ 126

---

$ export a=Hello b=World
$ cat<<$a
$ $b
$ $a
$ echo $?
$ cat<<'$a'
$ $b
$ $a
$ echo $?
$ cat<<$b''$b
$ $a
$ $a
$ $b$b
$ echo $?
$ cat<<"$a"
$ $b
$ $a
$ echo $?

@ World
@ 0
@ $b
@ 0
@ $a
@ $a
@ 0
@ $b
@ 0

---

$ expr 1 + 1
$ echo $?
$ expr $? + $?
$ expr $? + $?
$ expr $? + $?
$ expr $? + $?

@ 2
@ 0
@ 0
@ 2
@ 0
@ 2

---

$ echo abc # | wc -l

@ abc


=== Built-ins: echo ===

$ echo

@ 

---

$ echo -n

---

$ echo abc

@ abc

---

$ echo -n abc > outfile
$ echo >> outfile
$ cat outfile

@ abc

---

$ echo -n -n
$ echo -nnnnnnn

---

$ echo $?
$ fasfdsfd
$ echo $?

###
@ 0
@ 127

---

$ echo # abc

@ 

---

$ ec''h"o"  "Hello, World!"  '$?'   You"are"$?'my$?'"friend$?"$?

@ Hello, World! $? Youare0my$?friend00

---

$ echo "    # haha"

@     # haha

=== Built-ins: cd / pwd ===

$ mkdir -p io
$ pwd > io/out1
$ echo $?
$ cd io
$ echo $?
$ pwd > out2
$ echo $?
$ diff out1 out2 | head -n 1
$ echo $?

@ 0
@ 0
@ 0
@ 1c1
@ 0

---

$ mkdir -p io
$ pwd > out1
$ echo $?
$ cd io abc
$ echo $?
$ pwd > out2
$ echo $?
$ diff out1 out2 | wc -l

###
@ 0
@ 1
@ 0
@ 0

---

$ pwd > out1
$ echo $?
$ mkdir -p io
$ cd io
$ echo $?
$ pwd > ../out2
$ echo $?
$ cd .. abc
$ echo $?
$ pwd > ../out3
$ echo $?
$ cd ..
$ echo $?
$ pwd > out4
$ echo $?
$ diff out1 out2 | wc -l
$ diff out2 out3 | wc -l
$ diff out3 out4 | wc -l
$ diff out1 out4 | wc -l

###
@ 0
@ 0
@ 0
@ 1
@ 0
@ 0
@ 0
@ 4
@ 0
@ 4
@ 0

---

$ pwd sfdglk-jglkjd-lkgsfg | wc -l
$ echo $?

@ 1
@ 0


=== Built-ins: env ===

$ env | grep -E "^(PATH|HOME|USER|LOGNAME|SHLVL|PWD|_)=" | wc -l

@ 7

---

$ env | wc -l > out1
$ env | grep -E "^([a-zA-Z_][a-zA-Z0-9_]*)=" | wc -l > out2
$ diff out1 out2 | wc -l

@ 0


=== Built-ins: export / unset ===

$ export a=42
$ echo $? $a | cat -e

@ 0 42$

---

$ export a=42 b=24 c
$ echo $? $a $b | cat -e

@ 0 42 24$

---

$ unset
$ echo $?

@ 0

---

$ unset =---0asdf 809834-09 '/- / -/ / - /-/'
$ echo $?

@ 0

---

$ unset a b c d
$ echo $?
$ echo $a $b $c $?

@ 0
@ 0

---

$ export a=42 c c c c =d b=24
$ echo $? $a $b $c | cat -e

###
@ 1 42 24$

---

$ export | wc -l > out1
$ export | grep -E '^declare -x ([a-zA-Z_][a-zA-Z0-9_]*)=".*$' | wc -l > out2
$ diff out1 out2 | wc -l

@ 0

---

$ export c= d=" 42 "
$ echo $? $c $d | cat -e
$ env | grep -E "^(c=)"
$ env | grep -E "^(d=)"

@ 0 42$
@ c=
@ d= 42 

---

$ export a=echo
$ $a $a $?
$ $a $a $?

@ echo 0
@ echo 0

---

$ export a='>"<'
$ echo $?
$ export | grep -E "^(declare -x a=)"
$ echo $?

@ 0
@ declare -x a=">\"<"
@ 0

=== Combining echo and $ ===

$ echo $?

@ 0

---

$ echo '$?'

@ $?

---

$ echo $

@ $

---

$ echo $""

@ 

---

$ echo "$"

@ $

---

$ echo "$"?

@ $?

---

$ echo $"?"

@ ?

---

$ echo "$''"?

@ $''?

---

$ unset a
$ echo "$a"?

@ ?

---

$ export a=42
$ echo $"a"

@ a


=== Built-ins: exit ===

$ exit 0 0
$ echo $?

###
@ 1


=== Basic Errors ===

$ doesnotexist
$ echo $?

###
@ 127

---

$ rm -rf io
$ echo $?
$ touch io
$ echo $?
$ cd io
$ echo $?

###
@ 0
@ 0
@ 1

---

$ rm -rf io
$ echo $?
$ touch io
$ echo $?
$ ./io
$ echo $?

###
@ 0
@ 0
@ 126


=== ft_souffrance: exit status ===

$ unset a
$ $a
$ echo $?

@ 0

---

$ expr $?
$ expr $?
$ expr $?
$ expr $?
$ expr $?
$ expr $?

@ 0
@ 1
@ 0
@ 1
@ 0
@ 1

---

$ lolilol | ls | lolilol
$ echo $?

###
@ 127

---

$ rm -rf io
$ mkdir -p io
$ cd io
$ echo $?
$ touch a
$ echo $?
$ lolilol | lolilol | ls | wc -l | cat |cat| cat|cat
$ echo $?

###
@ 0
@ 0
@ 1
@ 0

---

$ rm -rf io
$ echo $?
$ mkdir io
$ echo $?
$ mkdir io
$ echo $?

###
@ 0
@ 0
@ 1


=== ft_souffrance: redirections ===

$ rm -rf io
$ mkdir io
$ cd io
$ echo $?
$ echo -n abc >out>out2 >   out3
$ echo $?
$ >> out echo 1
$ >>out2 echo 2
$ >>out3 echo 3
$ cat out
$ cat out2
$ cat out3

@ 0
@ 0
@ 1
@ 2
@ abc3

---

$ rm -rf io
$ mkdir io
$ cd io
$ echo $?
$ echo -n abc>1 > 2 >3
$ <2 <3 grep abc

@ 0
@ abc

---

$ rm -rf io
$ mkdir io
$ cd io
$ echo $?
$ echo abc>1 > 2 >3
$ <2 cat >1 < 3
$ echo $?
$ >> 1 echo 1
$ >> 2 echo 2
$ >> 3 echo 3
$ cat 1
$ cat 2
$ cat 3

@ 0
@ 0
@ abc
@ 1
@ 2
@ abc
@ 3

---

$ rm -rf io
$ mkdir io
$ cd io
$ echo $?

$ >out echo out
$ >out1>out2>out3<out>out4 cat -e
$ echo $?
$ ls | wc -l
$ >> out1 echo 1
$ >> out2 echo 2
$ >> out3 echo 3
$ >> out4 echo 4
$ cat out1
$ cat out2
$ cat out3
$ cat out4

@ 0
@ 0
@ 5
@ 1
@ 2
@ 3
@ out$
@ 4

---

$ <<here cat << here << here
$ abc
$ here
$ def
$ here
$ ghi
$ here
$ echo $?

@ ghi
@ 0

---

$ export a=io
$ << 1 > out cat << $a
$ abc
$ 1
$ def
$ io
$ $a
$ echo $?
$ cat out | cat | cat | cat | cat | cat | cat -e

@ 0
@ def$
@ io$

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << $b
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ io

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << ''$b""''
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ $a

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << '$b'""''
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ $a

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << "$b"
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ $a

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << "a"$b
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ a$b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ $a
@ $b

---

$ export a=io b=outfile
$ rm -rf $a
$ mkdir $a
$ echo $?

$ << 1 > $a/$b cat << $b$b
$ abc
$ 1
$ def
$ outfile
$ $a
$ $b
$ $b$b
$ echo $?
$ cat $a/$b

@ 0
@ 0
@ def
@ outfile
@ io
@ outfile

---

$ cat <<""
$ 
$ echo $?

@ 0

---

$ unset 6_a
$ echo $?

@ 0

---

$ export coucou="test"
$ unset coucou | ls
$ env | grep coucou | wc -l

@ 1

---

$ unset 0oui
$ echo $?

@ 0

---

$ export HELLO=test
$ unset HELLO=
$ echo $?
$ env | grep HELLO | wc -l

@ 0
@ 1

---

$ unset -lol
$ echo $?

@ 2
###

=== ft_souffrance: error ===

$ <lolilollll
###

---

$ <
###

---

$ << 1 > << 2
###

---

$ |
###

---

$ << 1 > 2 cat <| cat
###

---

$ >>> outt
###

---

$ <<<
###

---

$ <<><>><>>>>
###

=== wildcards ===


$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch infile.d
$ touch outfile.d
$ export wild=file
$ echo "infile" > infile.d
$ echo "outfile" > outfile.d
$ cat *$wild*.d

@ infile
@ outfile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch infile.d
$ touch outfile.d
$ export wild=file
$ echo "infile" > infile.d
$ echo "outfile" > outfile.d
$ cat *'$wild'*.d

###

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch infile outfile file podwal ilesf dsfiless files
$ ls *file

@ file
@ infile
@ outfile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ echo "helloooooooo" > infile
$ echo "niceeee" > infile2
$ echo "test" > infile3
$ cat *

@ helloooooooo
@ niceeee
@ test

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch infile.d outfile.d
$ export wild=file
$ echo "infile" > infile.d
$ echo "outfile" > outfile.d
$ cat *'$w'ild*.d
###

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch infile.d outfile.d
$ export wile=file
$ echo "infile" > infile.d
$ echo "outfile" > outfile.d
$ cat *"$w"ile*.d

@ infile
@ outfile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch f
$ touch b
$ touch a
$ touch d
$ touch e
$ touch c
$ echo *

@ a b c d e f

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch .hidden
$ echo *

@ *

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch  a .hidden b
$ echo *

@ a b

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *

@ >..< header.h include infile.d infiles main.c Makefile outfile.d outfiles src tester tester.py >.U.<

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo ******************************************

@ >..< header.h include infile.d infiles main.c Makefile outfile.d outfiles src tester tester.py >.U.<

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo M*

@ Makefile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *e

@ include Makefile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *a*

@ header.h main.c Makefile

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo ***.c

@ main.c

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *file
$ echo *file*

@ Makefile
@ infile.d infiles Makefile outfile.d outfiles

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *.d
$ echo *.d*

@ infile.d outfile.d
@ infile.d outfile.d

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *e*
$ echo *********************e*********************

@ header.h include infile.d infiles Makefile outfile.d outfiles tester tester.py
@ header.h include infile.d infiles Makefile outfile.d outfiles tester tester.py

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo z*
$ echo *z

@ z*
@ *z

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo .*

@ .hidden .U.

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *.

@ *.

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *.*

@ >..< header.h infile.d main.c outfile.d tester.py >.U.<

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ mkdir src include infiles outfiles tester ">..<" ">.U.<" ".U."
$ touch Makefile main.c header.h infile.d outfile.d tester.py .hidden
$ echo *..*
$ echo *.*.*

@ >..<
@ >..< >.U.<

=== Wildcards2 ===

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo $w

@ abc bcd cde def *wild

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo "$w"

@ *

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo $w$w

@ abc bcd cde def *wild

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo a$w

@ abc

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo $w""$w''e

@ cde

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo $w"$w"e

@ **e

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo "$w"$w

@ *wild

---

$ rm -rf wild
$ mkdir wild
$ cd ./wild
$ touch abc bcd cde def "*wild"
$ export w=*
$ echo "$w""$w"

@ **
